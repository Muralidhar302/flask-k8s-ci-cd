name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout code from GitHub
    - name: Checkout repository
      uses: actions/checkout@v4

    # Step 2: Set up Docker Buildx
    - name: Set up Docker
      uses: docker/setup-buildx-action@v3

    # Step 3: Log in to DockerHub
    - name: Log in to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 4: Build and Push Docker image
    - name: Build and Push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/flask-app:latest

    # Step 5: Run Trivy vulnerability scan
    - name: Run Trivy scan on Docker image
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: '${{ secrets.DOCKER_USERNAME }}/flask-app:latest'
        format: 'table'
        exit-code: '0'
        severity: 'CRITICAL,HIGH'

    # # Step 6: Run SonarQube scan (make sure server & token are configured)
    # - name: SonarQube Scan
    #   uses: SonarSource/sonarqube-scan-action@v2.0.2
    #   with:
    #     projectBaseDir: .
    #   env:
    #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

    # Step 7: Set up kubeconfig to access self-managed cluster
    - name: Set up kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config

    # Step 8: Deploy to Kubernetes (update your manifests if needed)
    - name: Deploy to Kubernetes cluster
      run: |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml
